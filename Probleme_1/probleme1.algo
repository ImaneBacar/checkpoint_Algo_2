ALGORITHM probleme1
VAR
    tab1: ARRAY_OF INTEGER[4] ;
    tab2: ARRAY_OF INTEGER[5] ;
    interTab : ARRAY_OF INTEGER[?];
    somme, k: INTEGER;
    trouve : BOOLEAN
    
BEGIN
    tab1 := [3, 1, 7, 9];
    tab2 := [2, 4, 1, 9, 3];
    somme:=0;
    k:=0;

/* on chercher les intersection de tab 1 et tab2 [1,3,9]  */
    FOR i FROM 0 TO tab1.length -1 STEP 1  DO
        FOR j FROM 0 TO tab2.length -1 STEP 1  DO
            IF (tab1[i] == tab2[j]) THEN
                interTab[k]=tab1[i];
                k:=k+1;
            END_IF
        END_FOR
    END_FOR

    /* on chercher les elements distinct qui sont dans tab1 */
    FOR i FROM 0 TO tab1.length -1 STEP 1  DO
    trouve:=false; 
        FOR k FROM 0 TO interTab.length -1 STEP 1  DO
            IF (tab1[i] == interTab[k]) THEN
                ajout:= true
            END_IF
        END_FOR
        IF (trouve==false) THEN
            somme:= somme + tab1[i];
    END_FOR

    /* on chercher les elements distinct qui sont dans tab2 */
    FOR i FROM 0 TO tab2.length -1 STEP 1  DO
    trouve:=false; 
        FOR k FROM 0 TO interTab.length -1 STEP 1  DO
            IF (tab2[i] == interTab[k]) THEN
                ajout:= true
            END_IF
        END_FOR
        IF (trouve==false) THEN
            somme:= somme + tab1[i];
    END_FOR
/* on affiche la somme  */
    write("Somme : "somme);
    
END



